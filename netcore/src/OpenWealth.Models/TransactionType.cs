/*
 * Custody Services
 *
 * This API is part of the OpenWealth APIs for the connectivity between custody banks and WealthTechs (e.g. Portfolio Management Systems). This API allows the user to receive data from custody banks regarding accounts and positions. The API is designed to be used for either update end of day data batches or single near-realtime account/position information. Furthermore, this API allows the user to receive data from custody banks regarding transactions. In this version (2.0) only transactions which include effective cash or securities movements are in scope and corporate actions without any cash impact are delivered only on a informative basis. 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: openwealth@synpulse.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using OpenWealth.Converters;

namespace OpenWealth.Models
{
    /// <summary>
    /// Type of the transaction.
    /// </summary>
    /// <value>Type of the transaction.</value>

    public enum TransactionType
    {

        /// <summary>
        /// Enum Accumulation for accumulation
        /// </summary>
        [EnumMember(Value = "accumulation")]
        Accumulation = 1,

        /// <summary>
        /// Enum AdditionalPayment for additionalPayment
        /// </summary>
        [EnumMember(Value = "additionalPayment")]
        AdditionalPayment = 2,

        /// <summary>
        /// Enum AdjustNotional for adjustNotional
        /// </summary>
        [EnumMember(Value = "adjustNotional")]
        AdjustNotional = 3,

        /// <summary>
        /// Enum AmortizationAndInterestPayment for amortizationAndInterestPayment
        /// </summary>
        [EnumMember(Value = "amortizationAndInterestPayment")]
        AmortizationAndInterestPayment = 4,

        /// <summary>
        /// Enum Assignment for assignment
        /// </summary>
        [EnumMember(Value = "assignment")]
        Assignment = 5,

        /// <summary>
        /// Enum Assimilation for assimilation
        /// </summary>
        [EnumMember(Value = "assimilation")]
        Assimilation = 6,

        /// <summary>
        /// Enum Bonus for bonus
        /// </summary>
        [EnumMember(Value = "bonus")]
        Bonus = 7,

        /// <summary>
        /// Enum Buy for buy
        /// </summary>
        [EnumMember(Value = "buy")]
        Buy = 8,

        /// <summary>
        /// Enum BuyToClose for buyToClose
        /// </summary>
        [EnumMember(Value = "buyToClose")]
        BuyToClose = 9,

        /// <summary>
        /// Enum CapitalIncrease for capitalIncrease
        /// </summary>
        [EnumMember(Value = "capitalIncrease")]
        CapitalIncrease = 10,

        /// <summary>
        /// Enum CloseContract for closeContract
        /// </summary>
        [EnumMember(Value = "closeContract")]
        CloseContract = 11,

        /// <summary>
        /// Enum ConversionBondShare for conversionBondShare
        /// </summary>
        [EnumMember(Value = "conversionBondShare")]
        ConversionBondShare = 12,

        /// <summary>
        /// Enum Coupon for coupon
        /// </summary>
        [EnumMember(Value = "coupon")]
        Coupon = 13,

        /// <summary>
        /// Enum CreditEvent for creditEvent
        /// </summary>
        [EnumMember(Value = "creditEvent")]
        CreditEvent = 14,

        /// <summary>
        /// Enum DecreasePrincipal for decreasePrincipal
        /// </summary>
        [EnumMember(Value = "decreasePrincipal")]
        DecreasePrincipal = 15,

        /// <summary>
        /// Enum DeliveryFreeOfPayment for deliveryFreeOfPayment
        /// </summary>
        [EnumMember(Value = "deliveryFreeOfPayment")]
        DeliveryFreeOfPayment = 16,

        /// <summary>
        /// Enum DeliveryVsPayment for deliveryVsPayment
        /// </summary>
        [EnumMember(Value = "deliveryVsPayment")]
        DeliveryVsPayment = 17,

        /// <summary>
        /// Enum DividendCash for dividendCash
        /// </summary>
        [EnumMember(Value = "dividendCash")]
        DividendCash = 18,

        /// <summary>
        /// Enum DividendChoice for dividendChoice
        /// </summary>
        [EnumMember(Value = "dividendChoice")]
        DividendChoice = 19,

        /// <summary>
        /// Enum DividendReinvestment for dividendReinvestment
        /// </summary>
        [EnumMember(Value = "dividendReinvestment")]
        DividendReinvestment = 20,

        /// <summary>
        /// Enum DividendStock for dividendStock
        /// </summary>
        [EnumMember(Value = "dividendStock")]
        DividendStock = 21,

        /// <summary>
        /// Enum Exercise for exercise
        /// </summary>
        [EnumMember(Value = "exercise")]
        Exercise = 22,

        /// <summary>
        /// Enum Expiration for expiration
        /// </summary>
        [EnumMember(Value = "expiration")]
        Expiration = 23,

        /// <summary>
        /// Enum Fees for fees
        /// </summary>
        [EnumMember(Value = "fees")]
        Fees = 24,

        /// <summary>
        /// Enum FinalLiquidationPayment for finalLiquidationPayment
        /// </summary>
        [EnumMember(Value = "finalLiquidationPayment")]
        FinalLiquidationPayment = 25,

        /// <summary>
        /// Enum FxSpot for fxSpot
        /// </summary>
        [EnumMember(Value = "fxSpot")]
        FxSpot = 26,

        /// <summary>
        /// Enum IncreasePrincipal for increasePrincipal
        /// </summary>
        [EnumMember(Value = "increasePrincipal")]
        IncreasePrincipal = 27,

        /// <summary>
        /// Enum InflowCash for inflowCash
        /// </summary>
        [EnumMember(Value = "inflowCash")]
        InflowCash = 28,

        /// <summary>
        /// Enum InstrumentExchange for instrumentExchange
        /// </summary>
        [EnumMember(Value = "instrumentExchange")]
        InstrumentExchange = 29,

        /// <summary>
        /// Enum InterestPayment for interestPayment
        /// </summary>
        [EnumMember(Value = "interestPayment")]
        InterestPayment = 30,

        /// <summary>
        /// Enum InternalTransfer for internalTransfer
        /// </summary>
        [EnumMember(Value = "internalTransfer")]
        InternalTransfer = 31,

        /// <summary>
        /// Enum LiquidationPayment for liquidationPayment
        /// </summary>
        [EnumMember(Value = "liquidationPayment")]
        LiquidationPayment = 32,

        /// <summary>
        /// Enum Merger for merger
        /// </summary>
        [EnumMember(Value = "merger")]
        Merger = 33,

        /// <summary>
        /// Enum OpenContract for openContract
        /// </summary>
        [EnumMember(Value = "openContract")]
        OpenContract = 34,

        /// <summary>
        /// Enum Other for other
        /// </summary>
        [EnumMember(Value = "other")]
        Other = 35,

        /// <summary>
        /// Enum OutflowCash for outflowCash
        /// </summary>
        [EnumMember(Value = "outflowCash")]
        OutflowCash = 36,

        /// <summary>
        /// Enum Premium for premium
        /// </summary>
        [EnumMember(Value = "premium")]
        Premium = 37,

        /// <summary>
        /// Enum PrepaymentSubstitution for prepaymentSubstitution
        /// </summary>
        [EnumMember(Value = "prepaymentSubstitution")]
        PrepaymentSubstitution = 38,

        /// <summary>
        /// Enum ReceiveFreeOfPayment for receiveFreeOfPayment
        /// </summary>
        [EnumMember(Value = "receiveFreeOfPayment")]
        ReceiveFreeOfPayment = 39,

        /// <summary>
        /// Enum ReceiveVsPayment for receiveVsPayment
        /// </summary>
        [EnumMember(Value = "receiveVsPayment")]
        ReceiveVsPayment = 40,

        /// <summary>
        /// Enum Redemption for redemption
        /// </summary>
        [EnumMember(Value = "redemption")]
        Redemption = 41,

        /// <summary>
        /// Enum RedemptionPartial for redemptionPartial
        /// </summary>
        [EnumMember(Value = "redemptionPartial")]
        RedemptionPartial = 42,

        /// <summary>
        /// Enum RedemptionPrior for redemptionPrior
        /// </summary>
        [EnumMember(Value = "redemptionPrior")]
        RedemptionPrior = 43,

        /// <summary>
        /// Enum ReductionOfNominal for reductionOfNominal
        /// </summary>
        [EnumMember(Value = "reductionOfNominal")]
        ReductionOfNominal = 44,

        /// <summary>
        /// Enum ResetPayment for resetPayment
        /// </summary>
        [EnumMember(Value = "resetPayment")]
        ResetPayment = 45,

        /// <summary>
        /// Enum RightDistribution for rightDistribution
        /// </summary>
        [EnumMember(Value = "rightDistribution")]
        RightDistribution = 46,

        /// <summary>
        /// Enum Sell for sell
        /// </summary>
        [EnumMember(Value = "sell")]
        Sell = 47,

        /// <summary>
        /// Enum SellToOpen for sellToOpen
        /// </summary>
        [EnumMember(Value = "sellToOpen")]
        SellToOpen = 48,

        /// <summary>
        /// Enum SpinOff for spinOff
        /// </summary>
        [EnumMember(Value = "spinOff")]
        SpinOff = 49,

        /// <summary>
        /// Enum StockSplit for stockSplit
        /// </summary>
        [EnumMember(Value = "stockSplit")]
        StockSplit = 50,

        /// <summary>
        /// Enum Subscription for subscription
        /// </summary>
        [EnumMember(Value = "subscription")]
        Subscription = 51,

        /// <summary>
        /// Enum TaxCorrections for taxCorrections
        /// </summary>
        [EnumMember(Value = "taxCorrections")]
        TaxCorrections = 52,

        /// <summary>
        /// Enum Taxes for taxes
        /// </summary>
        [EnumMember(Value = "taxes")]
        Taxes = 53,

        /// <summary>
        /// Enum TransferMetalPhysical for transferMetalPhysical
        /// </summary>
        [EnumMember(Value = "transferMetalPhysical")]
        TransferMetalPhysical = 54,

        /// <summary>
        /// Enum Unwind for unwind
        /// </summary>
        [EnumMember(Value = "unwind")]
        Unwind = 55,

        /// <summary>
        /// Enum VariationMargin for variationMargin
        /// </summary>
        [EnumMember(Value = "variationMargin")]
        VariationMargin = 56
    }
}
