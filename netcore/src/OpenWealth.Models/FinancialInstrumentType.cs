/*
 * Custody Services
 *
 * This API is part of the OpenWealth APIs for the connectivity between custody banks and WealthTechs (e.g. Portfolio Management Systems). This API allows the user to receive data from custody banks regarding accounts and positions. The API is designed to be used for either update end of day data batches or single near-realtime account/position information. Furthermore, this API allows the user to receive data from custody banks regarding transactions. In this version (2.0) only transactions which include effective cash or securities movements are in scope and corporate actions without any cash impact are delivered only on a informative basis. 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: openwealth@synpulse.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using OpenWealth.Converters;

namespace OpenWealth.Models
{
    /// <summary>
    /// Type of the financial instrument.
    /// </summary>
    /// <value>Type of the financial instrument.</value>

    public enum FinancialInstrumentType
    {

        /// <summary>
        /// Enum Cash for cash
        /// </summary>
        [EnumMember(Value = "cash")]
        Cash = 1,

        /// <summary>
        /// Enum Bond for bond
        /// </summary>
        [EnumMember(Value = "bond")]
        Bond = 2,

        /// <summary>
        /// Enum Equity for equity
        /// </summary>
        [EnumMember(Value = "equity")]
        Equity = 3,

        /// <summary>
        /// Enum Fund for fund
        /// </summary>
        [EnumMember(Value = "fund")]
        Fund = 4,

        /// <summary>
        /// Enum Index for index
        /// </summary>
        [EnumMember(Value = "index")]
        Index = 5,

        /// <summary>
        /// Enum Commodity for commodity
        /// </summary>
        [EnumMember(Value = "commodity")]
        Commodity = 6,

        /// <summary>
        /// Enum Option for option
        /// </summary>
        [EnumMember(Value = "option")]
        Option = 7,

        /// <summary>
        /// Enum Future for future
        /// </summary>
        [EnumMember(Value = "future")]
        Future = 8,

        /// <summary>
        /// Enum FxForward for fxForward
        /// </summary>
        [EnumMember(Value = "fxForward")]
        FxForward = 9,

        /// <summary>
        /// Enum FxSwap for fxSwap
        /// </summary>
        [EnumMember(Value = "fxSwap")]
        FxSwap = 10,

        /// <summary>
        /// Enum FxOption for fxOption
        /// </summary>
        [EnumMember(Value = "fxOption")]
        FxOption = 11,

        /// <summary>
        /// Enum Mortgage for mortgage
        /// </summary>
        [EnumMember(Value = "mortgage")]
        Mortgage = 12,

        /// <summary>
        /// Enum Credit for credit
        /// </summary>
        [EnumMember(Value = "credit")]
        Credit = 13,

        /// <summary>
        /// Enum FixedLoan for fixedLoan
        /// </summary>
        [EnumMember(Value = "fixedLoan")]
        FixedLoan = 14,

        /// <summary>
        /// Enum FixedDeposit for fixedDeposit
        /// </summary>
        [EnumMember(Value = "fixedDeposit")]
        FixedDeposit = 15,

        /// <summary>
        /// Enum CallableLoan for callableLoan
        /// </summary>
        [EnumMember(Value = "callableLoan")]
        CallableLoan = 16,

        /// <summary>
        /// Enum CallableDeposit for callableDeposit
        /// </summary>
        [EnumMember(Value = "callableDeposit")]
        CallableDeposit = 17,

        /// <summary>
        /// Enum InterestRateSwap for interestRateSwap
        /// </summary>
        [EnumMember(Value = "interestRateSwap")]
        InterestRateSwap = 18,

        /// <summary>
        /// Enum TotalReturnSwap for totalReturnSwap
        /// </summary>
        [EnumMember(Value = "totalReturnSwap")]
        TotalReturnSwap = 19,

        /// <summary>
        /// Enum CreditDefaultSwap for creditDefaultSwap
        /// </summary>
        [EnumMember(Value = "creditDefaultSwap")]
        CreditDefaultSwap = 20,

        /// <summary>
        /// Enum CryptoAsset for cryptoAsset
        /// </summary>
        [EnumMember(Value = "cryptoAsset")]
        CryptoAsset = 21,

        /// <summary>
        /// Enum Other for other
        /// </summary>
        [EnumMember(Value = "other")]
        Other = 22
    }
}
