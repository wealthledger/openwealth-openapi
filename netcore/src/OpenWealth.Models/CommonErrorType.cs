/*
 * Custody Services
 *
 * This API is part of the OpenWealth APIs for the connectivity between custody banks and WealthTechs (e.g. Portfolio Management Systems). This API allows the user to receive data from custody banks regarding accounts and positions. The API is designed to be used for either update end of day data batches or single near-realtime account/position information. Furthermore, this API allows the user to receive data from custody banks regarding transactions. In this version (2.0) only transactions which include effective cash or securities movements are in scope and corporate actions without any cash impact are delivered only on a informative basis. 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: openwealth@synpulse.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using OpenWealth.Converters;

namespace OpenWealth.Models
{
    /// <summary>
    /// Error Types for CommonErrorResponse.
    /// </summary>
    /// <value>Error Types for CommonErrorResponse.</value>

    public enum CommonErrorType
    {

        /// <summary>
        /// Enum INVALIDPAYLOAD for /problems/INVALID_PAYLOAD
        /// </summary>
        [EnumMember(Value = "/problems/INVALID_PAYLOAD")]
        INVALIDPAYLOAD = 1,

        /// <summary>
        /// Enum MALFORMEDPAYLOAD for /problems/MALFORMED_PAYLOAD
        /// </summary>
        [EnumMember(Value = "/problems/MALFORMED_PAYLOAD")]
        MALFORMEDPAYLOAD = 2,

        /// <summary>
        /// Enum INVALIDTOKEN for /problems/INVALID_TOKEN
        /// </summary>
        [EnumMember(Value = "/problems/INVALID_TOKEN")]
        INVALIDTOKEN = 3,

        /// <summary>
        /// Enum EXPIREDTOKEN for /problems/EXPIRED_TOKEN
        /// </summary>
        [EnumMember(Value = "/problems/EXPIRED_TOKEN")]
        EXPIREDTOKEN = 4,

        /// <summary>
        /// Enum INSUFFICIENTPRIVILEGES for /problems/INSUFFICIENT_PRIVILEGES
        /// </summary>
        [EnumMember(Value = "/problems/INSUFFICIENT_PRIVILEGES")]
        INSUFFICIENTPRIVILEGES = 5,

        /// <summary>
        /// Enum NOACCESSTORESOURCE for /problems/NO_ACCESS_TO_RESOURCE
        /// </summary>
        [EnumMember(Value = "/problems/NO_ACCESS_TO_RESOURCE")]
        NOACCESSTORESOURCE = 6,

        /// <summary>
        /// Enum RESOURCEDOESNOTEXIST for /problems/RESOURCE_DOES_NOT_EXIST
        /// </summary>
        [EnumMember(Value = "/problems/RESOURCE_DOES_NOT_EXIST")]
        RESOURCEDOESNOTEXIST = 7,

        /// <summary>
        /// Enum RESOURCENOTREADY for /problems/RESOURCE_NOT_READY
        /// </summary>
        [EnumMember(Value = "/problems/RESOURCE_NOT_READY")]
        RESOURCENOTREADY = 8,

        /// <summary>
        /// Enum RESOURCETOOLARGE for /problems/RESOURCE_TOO_LARGE
        /// </summary>
        [EnumMember(Value = "/problems/RESOURCE_TOO_LARGE")]
        RESOURCETOOLARGE = 9,

        /// <summary>
        /// Enum WRONGMETHOD for /problems/WRONG_METHOD
        /// </summary>
        [EnumMember(Value = "/problems/WRONG_METHOD")]
        WRONGMETHOD = 10,

        /// <summary>
        /// Enum OPERATIONNOTALLOWED for /problems/OPERATION_NOT_ALLOWED
        /// </summary>
        [EnumMember(Value = "/problems/OPERATION_NOT_ALLOWED")]
        OPERATIONNOTALLOWED = 11,

        /// <summary>
        /// Enum TECHNICALERROR for /problems/TECHNICAL_ERROR
        /// </summary>
        [EnumMember(Value = "/problems/TECHNICAL_ERROR")]
        TECHNICALERROR = 12,

        /// <summary>
        /// Enum NOTIMPLEMENTED for /problems/NOT_IMPLEMENTED
        /// </summary>
        [EnumMember(Value = "/problems/NOT_IMPLEMENTED")]
        NOTIMPLEMENTED = 13,

        /// <summary>
        /// Enum SERVICEUNAVAILABLE for /problems/SERVICE_UNAVAILABLE
        /// </summary>
        [EnumMember(Value = "/problems/SERVICE_UNAVAILABLE")]
        SERVICEUNAVAILABLE = 14
    }
}
