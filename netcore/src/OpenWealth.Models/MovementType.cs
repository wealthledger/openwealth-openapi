/*
 * Custody Services
 *
 * This API is part of the OpenWealth APIs for the connectivity between custody banks and WealthTechs (e.g. Portfolio Management Systems). This API allows the user to receive data from custody banks regarding accounts and positions. The API is designed to be used for either update end of day data batches or single near-realtime account/position information. Furthermore, this API allows the user to receive data from custody banks regarding transactions. In this version (2.0) only transactions which include effective cash or securities movements are in scope and corporate actions without any cash impact are delivered only on a informative basis. 
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: openwealth@synpulse.com
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using System.Text.Json;
using OpenWealth.Converters;

namespace OpenWealth.Models
{
    /// <summary>
    /// Describes which kind of movement is reported from a banks perspective.
    /// </summary>
    /// <value>Describes which kind of movement is reported from a banks perspective.</value>

    public enum MovementType
    {

        /// <summary>
        /// Enum AccruedInterest for accruedInterest
        /// </summary>
        [EnumMember(Value = "accruedInterest")]
        AccruedInterest = 1,

        /// <summary>
        /// Enum AdditionalWithholdingTax for additionalWithholdingTax
        /// </summary>
        [EnumMember(Value = "additionalWithholdingTax")]
        AdditionalWithholdingTax = 2,

        /// <summary>
        /// Enum Asset for asset
        /// </summary>
        [EnumMember(Value = "asset")]
        Asset = 3,

        /// <summary>
        /// Enum BrokerageFee for brokerageFee
        /// </summary>
        [EnumMember(Value = "brokerageFee")]
        BrokerageFee = 4,

        /// <summary>
        /// Enum CapitalGainTax for capitalGainTax
        /// </summary>
        [EnumMember(Value = "capitalGainTax")]
        CapitalGainTax = 5,

        /// <summary>
        /// Enum Cash for cash
        /// </summary>
        [EnumMember(Value = "cash")]
        Cash = 6,

        /// <summary>
        /// Enum Commission for commission
        /// </summary>
        [EnumMember(Value = "commission")]
        Commission = 7,

        /// <summary>
        /// Enum CustodyFee for custodyFee
        /// </summary>
        [EnumMember(Value = "custodyFee")]
        CustodyFee = 8,

        /// <summary>
        /// Enum ExchangeFee for exchangeFee
        /// </summary>
        [EnumMember(Value = "exchangeFee")]
        ExchangeFee = 9,

        /// <summary>
        /// Enum FinancialTransactionTax for financialTransactionTax
        /// </summary>
        [EnumMember(Value = "financialTransactionTax")]
        FinancialTransactionTax = 10,

        /// <summary>
        /// Enum Interest for interest
        /// </summary>
        [EnumMember(Value = "interest")]
        Interest = 11,

        /// <summary>
        /// Enum ManagementFee for managementFee
        /// </summary>
        [EnumMember(Value = "managementFee")]
        ManagementFee = 12,

        /// <summary>
        /// Enum OtherFee for otherFee
        /// </summary>
        [EnumMember(Value = "otherFee")]
        OtherFee = 13,

        /// <summary>
        /// Enum Other for other
        /// </summary>
        [EnumMember(Value = "other")]
        Other = 14,

        /// <summary>
        /// Enum OtherTax for otherTax
        /// </summary>
        [EnumMember(Value = "otherTax")]
        OtherTax = 15,

        /// <summary>
        /// Enum Premium for premium
        /// </summary>
        [EnumMember(Value = "premium")]
        Premium = 16,

        /// <summary>
        /// Enum ReclaimableTax for reclaimableTax
        /// </summary>
        [EnumMember(Value = "reclaimableTax")]
        ReclaimableTax = 17,

        /// <summary>
        /// Enum ReinvestmentAmount for reinvestmentAmount
        /// </summary>
        [EnumMember(Value = "reinvestmentAmount")]
        ReinvestmentAmount = 18,

        /// <summary>
        /// Enum StampDuty for stampDuty
        /// </summary>
        [EnumMember(Value = "stampDuty")]
        StampDuty = 19,

        /// <summary>
        /// Enum ThirdPartyFee for thirdPartyFee
        /// </summary>
        [EnumMember(Value = "thirdPartyFee")]
        ThirdPartyFee = 20,

        /// <summary>
        /// Enum TransactionFee for transactionFee
        /// </summary>
        [EnumMember(Value = "transactionFee")]
        TransactionFee = 21,

        /// <summary>
        /// Enum ValueAddedTax for valueAddedTax
        /// </summary>
        [EnumMember(Value = "valueAddedTax")]
        ValueAddedTax = 22,

        /// <summary>
        /// Enum WithholdingTax for withholdingTax
        /// </summary>
        [EnumMember(Value = "withholdingTax")]
        WithholdingTax = 23
    }
}
