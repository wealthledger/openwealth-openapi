{
  "openapi" : "3.0.0",
  "info" : {
    "contact" : {
      "email" : "openwealth@synpulse.com"
    },
    "description" : "This API is part of the OpenWealth APIs for the connectivity between custody banks and WealthTechs (e.g. Portfolio Management Systems). This API allows the user to receive data from custody banks regarding accounts and positions. The API is designed to be used for either update end of day data batches or single near-realtime account/position information. Furthermore, this API allows the user to receive data from custody banks regarding transactions. In this version (2.0) only transactions which include effective cash or securities movements are in scope and corporate actions without any cash impact are delivered only on a informative basis.\n",
    "license" : {
      "name" : "Apache 2.0",
      "url" : "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "title" : "Custody Services",
    "version" : "3.0.0"
  },
  "externalDocs" : {
    "description" : "Find out more about OpenWealth API specifications.",
    "url" : "https://openwealth.ch"
  },
  "servers" : [ {
    "description" : "Your Server URL",
    "url" : "https://api.openwealth.ch"
  } ],
  "tags" : [ {
    "description" : "Accounts operations.",
    "name" : "accounts"
  }, {
    "description" : "Customer operations.",
    "name" : "customers"
  }, {
    "description" : "Position operations.",
    "name" : "positions"
  }, {
    "description" : "Transaction operations.",
    "name" : "transactions"
  } ],
  "paths" : {
    "/customers" : {
      "get" : {
        "description" : "This endpoint returns a highlevel list of customers accessible for the logged in user. Paging is done based on the customer object, i.e. if limit is set to 1, then 1 customer will be returned per page.\n",
        "operationId" : "getCustomers",
        "parameters" : [ {
          "description" : "An opaque string value used for pagination.",
          "explode" : true,
          "in" : "query",
          "name" : "cursor",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Maximum number of items to return.",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Customer"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Returns a list with all customers.",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              },
              "nextCursor" : {
                "$ref" : "#/components/headers/X-Next-Cursor"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns all customers (business partners) accessible for the logged in user",
        "tags" : [ "customers" ]
      }
    },
    "/customers/{customerId}" : {
      "get" : {
        "description" : "This endpoint returns a single customer.",
        "operationId" : "getCustomersByCustomerId",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Customer"
                }
              }
            },
            "description" : "Returns a the specified customer.",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns a specific customer accessible for the logged in user",
        "tags" : [ "customers" ]
      }
    },
    "/customers/{customerId}/accounts" : {
      "get" : {
        "description" : "Returns all accounts for a specific customer. Paging is done based on the account object, i.e. if limit is set to 1, then 1 account will be returned per page.\n",
        "operationId" : "getCustomerAccountsByCustomerId",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "An opaque string value used for pagination.",
          "explode" : true,
          "in" : "query",
          "name" : "cursor",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Maximum number of items to return.",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Account"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Account List",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              },
              "nextCursor" : {
                "$ref" : "#/components/headers/X-Next-Cursor"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns the accounts for a specific customer accessible to the querying user",
        "tags" : [ "accounts" ]
      }
    },
    "/customers/{customerId}/accounts/{accountId}" : {
      "get" : {
        "description" : "Returns an account by id for a specific customer.",
        "operationId" : "getCustomerAccountById",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Account ID parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "description" : "The customer's account identification, this should NOT be an IBAN.",
            "maxLength" : 128,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
          "explode" : true,
          "in" : "query",
          "name" : "end_of_day_indicator",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Account"
                }
              }
            },
            "description" : "Account",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              },
              "nextCursor" : {
                "$ref" : "#/components/headers/X-Next-Cursor"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns an account by id for a specific customer",
        "tags" : [ "accounts" ]
      }
    },
    "/customers/{customerId}/positions" : {
      "get" : {
        "description" : "Returns all positions for a specific customer. Paging is done based on the position object, i.e. if limit is set to 1, then 1 position will be returned per page.\n",
        "operationId" : "getCustomerPositionByCustomerId",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A date value.",
          "explode" : true,
          "in" : "query",
          "name" : "date",
          "required" : true,
          "schema" : {
            "description" : "Full-date according to ISO 8601 i.e. YYYY-MM-DD format.",
            "example" : "2019-12-31",
            "format" : "date",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
          "explode" : true,
          "in" : "query",
          "name" : "end_of_day_indicator",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "An opaque string value used for pagination.",
          "explode" : true,
          "in" : "query",
          "name" : "cursor",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Maximum number of items to return.",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ValuatedPosition"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Position List",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              },
              "nextCursor" : {
                "$ref" : "#/components/headers/X-Next-Cursor"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns the positions for a specific customer",
        "tags" : [ "positions" ]
      }
    },
    "/customers/{customerId}/positions/{positionId}" : {
      "get" : {
        "description" : "Returns a positions for a specific customer.",
        "operationId" : "getCustomerPositionById",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Position ID parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "positionId",
          "required" : true,
          "schema" : {
            "description" : "Identification for the position given by the bank.",
            "example" : "1234566-12-1",
            "maxLength" : 128,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
          "explode" : true,
          "in" : "query",
          "name" : "end_of_day_indicator",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValuatedPosition"
                }
              }
            },
            "description" : "Position",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns a positions by id for a specific customer",
        "tags" : [ "positions" ]
      }
    },
    "/accounts/{accountId}/positions" : {
      "get" : {
        "description" : "Returns all positions for a specific account. Paging is done based on the position object, i.e. if limit is set to 1, then 1 position will be returned per page.\n",
        "operationId" : "getAccountPositionByAccountId",
        "parameters" : [ {
          "description" : "Account ID parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "description" : "The customer's account identification, this should NOT be an IBAN.",
            "maxLength" : 128,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A date value.",
          "explode" : true,
          "in" : "query",
          "name" : "date",
          "required" : true,
          "schema" : {
            "description" : "Full-date according to ISO 8601 i.e. YYYY-MM-DD format.",
            "example" : "2019-12-31",
            "format" : "date",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
          "explode" : true,
          "in" : "query",
          "name" : "end_of_day_indicator",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "An opaque string value used for pagination.",
          "explode" : true,
          "in" : "query",
          "name" : "cursor",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Maximum number of items to return.",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/ValuatedPosition"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Position List",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              },
              "nextCursor" : {
                "$ref" : "#/components/headers/X-Next-Cursor"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns the positions for a specific account",
        "tags" : [ "positions" ]
      }
    },
    "/accounts/{accountId}/positions/{positionId}" : {
      "get" : {
        "description" : "Returns a positions for a specific account.",
        "operationId" : "getAccountPositionById",
        "parameters" : [ {
          "description" : "Account ID parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "accountId",
          "required" : true,
          "schema" : {
            "description" : "The customer's account identification, this should NOT be an IBAN.",
            "maxLength" : 128,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Position ID parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "positionId",
          "required" : true,
          "schema" : {
            "description" : "Identification for the position given by the bank.",
            "example" : "1234566-12-1",
            "maxLength" : 128,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
          "explode" : true,
          "in" : "query",
          "name" : "end_of_day_indicator",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ValuatedPosition"
                }
              }
            },
            "description" : "Position",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns a positions by id for a specific account",
        "tags" : [ "positions" ]
      }
    },
    "/customers/{customerId}/transactions" : {
      "get" : {
        "description" : "Returns all transactions for the a specific customer. Paging is done based on the transaction object, i.e. if limit is set to 1, then 1 transaction will be returned per page.\n",
        "operationId" : "getTransactionByCustomerId",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "A date value.",
          "explode" : true,
          "in" : "query",
          "name" : "date",
          "required" : true,
          "schema" : {
            "description" : "Full-date according to ISO 8601 i.e. YYYY-MM-DD format.",
            "example" : "2019-12-31",
            "format" : "date",
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
          "explode" : true,
          "in" : "query",
          "name" : "end_of_day_indicator",
          "required" : false,
          "schema" : {
            "example" : true,
            "type" : "boolean"
          },
          "style" : "form"
        }, {
          "description" : "An opaque string value used for pagination.",
          "explode" : true,
          "in" : "query",
          "name" : "cursor",
          "required" : false,
          "schema" : {
            "type" : "string"
          },
          "style" : "form"
        }, {
          "description" : "Maximum number of items to return.",
          "explode" : true,
          "in" : "query",
          "name" : "limit",
          "required" : false,
          "schema" : {
            "format" : "int32",
            "minimum" : 1,
            "type" : "integer"
          },
          "style" : "form"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "items" : {
                    "$ref" : "#/components/schemas/Transaction"
                  },
                  "type" : "array"
                }
              }
            },
            "description" : "Returns a transaction list for a specific customer.",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              },
              "nextCursor" : {
                "$ref" : "#/components/headers/X-Next-Cursor"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns a transactions for a specific customer",
        "tags" : [ "transactions" ]
      }
    },
    "/customers/{customerId}/transactions/{transactionId}" : {
      "get" : {
        "description" : "Returns a transaction instance by id.",
        "operationId" : "getTransactionByTransactionId",
        "parameters" : [ {
          "description" : "Customer ID Parameter.",
          "explode" : false,
          "in" : "path",
          "name" : "customerId",
          "required" : true,
          "schema" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "123123-456",
            "maxLength" : 128,
            "minLength" : 1,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Transaction ID.",
          "explode" : false,
          "in" : "path",
          "name" : "transactionId",
          "required" : true,
          "schema" : {
            "description" : "Identification for the transaction given by the bank.",
            "example" : "1234566-12-7",
            "maxLength" : 128,
            "type" : "string"
          },
          "style" : "simple"
        }, {
          "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
          "explode" : false,
          "in" : "header",
          "name" : "X-Correlation-ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          },
          "style" : "simple"
        } ],
        "responses" : {
          "200" : {
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Transaction"
                }
              }
            },
            "description" : "Returns a transaction list for a specific customer.",
            "headers" : {
              "X-Correlation-ID" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "400" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "401" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "403" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Forbidden - The server understood the request but refuses to authorize it.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "404" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "405" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "500" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "501" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          },
          "503" : {
            "content" : {
              "application/problem+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommonErrorResponse"
                }
              }
            },
            "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
            "headers" : {
              "Content-Type" : {
                "$ref" : "#/components/headers/Problem-Content-Type"
              },
              "Content-Language" : {
                "$ref" : "#/components/headers/Content-Language"
              },
              "X-Correlation-Id" : {
                "$ref" : "#/components/headers/X-Correlation-Id"
              }
            }
          }
        },
        "summary" : "Returns a transaction for a specific customer",
        "tags" : [ "transactions" ]
      }
    }
  },
  "components" : {
    "headers" : {
      "X-Correlation-Id" : {
        "description" : "Client defined ID from request to correlates HTTP requests between a client and server.",
        "explode" : false,
        "schema" : {
          "example" : "f058ebd6-02f7-4d3f-942e-904344e8cde5",
          "type" : "string"
        },
        "style" : "simple"
      },
      "X-Next-Cursor" : {
        "description" : "An opaque string value, or an empty string if there are no more results.",
        "explode" : false,
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      },
      "Problem-Content-Type" : {
        "description" : "application/problem+json; charset=utf-8 according to RFC7807.",
        "explode" : false,
        "schema" : {
          "example" : "application/problem+json",
          "type" : "string"
        },
        "style" : "simple"
      },
      "Content-Language" : {
        "description" : "Response language - always en.",
        "explode" : false,
        "schema" : {
          "example" : "en",
          "type" : "string"
        },
        "style" : "simple"
      }
    },
    "parameters" : {
      "path_customerId" : {
        "description" : "Customer ID Parameter.",
        "explode" : false,
        "in" : "path",
        "name" : "customerId",
        "required" : true,
        "schema" : {
          "description" : "Unique and unambiguous identification used by the bank for the customer.",
          "example" : "123123-456",
          "maxLength" : 128,
          "minLength" : 1,
          "type" : "string"
        },
        "style" : "simple"
      },
      "path_accountId" : {
        "description" : "Account ID parameter.",
        "explode" : false,
        "in" : "path",
        "name" : "accountId",
        "required" : true,
        "schema" : {
          "description" : "The customer's account identification, this should NOT be an IBAN.",
          "maxLength" : 128,
          "type" : "string"
        },
        "style" : "simple"
      },
      "path_positionId" : {
        "description" : "Position ID parameter.",
        "explode" : false,
        "in" : "path",
        "name" : "positionId",
        "required" : true,
        "schema" : {
          "description" : "Identification for the position given by the bank.",
          "example" : "1234566-12-1",
          "maxLength" : 128,
          "type" : "string"
        },
        "style" : "simple"
      },
      "path_transactionId" : {
        "description" : "Transaction ID.",
        "explode" : false,
        "in" : "path",
        "name" : "transactionId",
        "required" : true,
        "schema" : {
          "description" : "Identification for the transaction given by the bank.",
          "example" : "1234566-12-7",
          "maxLength" : 128,
          "type" : "string"
        },
        "style" : "simple"
      },
      "cursor" : {
        "description" : "An opaque string value used for pagination.",
        "explode" : true,
        "in" : "query",
        "name" : "cursor",
        "required" : false,
        "schema" : {
          "type" : "string"
        },
        "style" : "form"
      },
      "limit" : {
        "description" : "Maximum number of items to return.",
        "explode" : true,
        "in" : "query",
        "name" : "limit",
        "required" : false,
        "schema" : {
          "format" : "int32",
          "minimum" : 1,
          "type" : "integer"
        },
        "style" : "form"
      },
      "end_of_day_indicator" : {
        "description" : "Indicates if the resources (positions & transactions) have been confirmed by the end-of-day (eod) processing.\n- If the parameter is not set, all resources will be delivered.\n- If the parameter is set to true, only resources with with the particular property set to true will be delivered.\n- If the parameter is set to false, only resources with with the particular property set to false will be delivered.\n",
        "explode" : true,
        "in" : "query",
        "name" : "end_of_day_indicator",
        "required" : false,
        "schema" : {
          "example" : true,
          "type" : "boolean"
        },
        "style" : "form"
      },
      "date" : {
        "description" : "A date value.",
        "explode" : true,
        "in" : "query",
        "name" : "date",
        "required" : true,
        "schema" : {
          "description" : "Full-date according to ISO 8601 i.e. YYYY-MM-DD format.",
          "example" : "2019-12-31",
          "format" : "date",
          "type" : "string"
        },
        "style" : "form"
      },
      "x_correlation_id_in_header" : {
        "description" : "Unique ID (defined by the caller) which will be reflected back in the response.",
        "explode" : false,
        "in" : "header",
        "name" : "X-Correlation-ID",
        "required" : true,
        "schema" : {
          "type" : "string"
        },
        "style" : "simple"
      }
    },
    "responses" : {
      "400" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Bad Request - The server cannot or will not process the request due to something that is perceived to be a client error as malformed request syntax.\n",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "401" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Unauthorized - The request has not been applied because it lacks valid authentication credentials for the target resource.",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "403" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Forbidden - The server understood the request but refuses to authorize it.",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "404" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Not Found - The origin server did not find a current representation for the target resource or is not willing to disclose that one exists.\n",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "405" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Method Not Allowed - The method received in the request-line is known by the origin server but not supported by the target resource.\n",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "500" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Internal Server Error - The server encountered an unexpected condition that prevented it from fulfilling the request.",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "501" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Not Implemented - The server does not support the functionality required to fulfill the request.",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      },
      "503" : {
        "content" : {
          "application/problem+json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CommonErrorResponse"
            }
          }
        },
        "description" : "Service Unavailable - The server is currently unable to handle the request due to a temporary overload or scheduled maintenance.",
        "headers" : {
          "Content-Type" : {
            "$ref" : "#/components/headers/Problem-Content-Type"
          },
          "Content-Language" : {
            "$ref" : "#/components/headers/Content-Language"
          },
          "X-Correlation-Id" : {
            "$ref" : "#/components/headers/X-Correlation-Id"
          }
        }
      }
    },
    "schemas" : {
      "Currency" : {
        "description" : "ISO 4217 code.",
        "example" : "CHF",
        "pattern" : "^[A-Z]{3}$",
        "title" : "Currency",
        "type" : "string"
      },
      "Customer" : {
        "description" : "Overview of the customer with the respective accounts.",
        "example" : {
          "referenceCurrency" : "CHF",
          "id" : "12345-6"
        },
        "properties" : {
          "id" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "12345-6",
            "maxLength" : 128,
            "type" : "string"
          },
          "referenceCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          }
        },
        "required" : [ "id" ],
        "title" : "Customer",
        "type" : "object"
      },
      "CommonErrorType" : {
        "description" : "Error Types for CommonErrorResponse.",
        "enum" : [ "/problems/INVALID_PAYLOAD", "/problems/MALFORMED_PAYLOAD", "/problems/INVALID_TOKEN", "/problems/EXPIRED_TOKEN", "/problems/INSUFFICIENT_PRIVILEGES", "/problems/NO_ACCESS_TO_RESOURCE", "/problems/RESOURCE_DOES_NOT_EXIST", "/problems/RESOURCE_NOT_READY", "/problems/RESOURCE_TOO_LARGE", "/problems/WRONG_METHOD", "/problems/OPERATION_NOT_ALLOWED", "/problems/TECHNICAL_ERROR", "/problems/NOT_IMPLEMENTED", "/problems/SERVICE_UNAVAILABLE" ],
        "example" : "/problems/TECHNICAL_ERROR",
        "title" : "Common Error Type",
        "type" : "string"
      },
      "CommonErrorResponse" : {
        "description" : "Common error response.",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/CommonErrorType"
          },
          "title" : {
            "description" : "Title of the error response.",
            "example" : "This is the general problem description",
            "type" : "string"
          },
          "detail" : {
            "description" : "Detailed description of the error response.",
            "example" : "Detailed problem description with respect to the current request",
            "type" : "string"
          },
          "instance" : {
            "description" : "Entity instance that threw the error.",
            "example" : "path/to/corresponding/resource",
            "type" : "string"
          }
        },
        "title" : "CommonErrorResponse",
        "type" : "object"
      },
      "PortfolioInformation" : {
        "description" : "Information about the portfolio.",
        "example" : {
          "identification" : "87654-3219",
          "referenceCurrency" : "CHF"
        },
        "properties" : {
          "identification" : {
            "description" : "Unique and unambiguous identification for the portfolio between the portfolio owner and the portfolio servicer.",
            "example" : "87654-3219",
            "maxLength" : 128,
            "minLength" : 1,
            "title" : "PortfolioIdentification",
            "type" : "string"
          },
          "referenceCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          }
        },
        "title" : "PortfolioInformation",
        "type" : "object"
      },
      "Account" : {
        "description" : "Account entity.",
        "example" : {
          "portfolioInformation" : {
            "identification" : "87654-3219",
            "referenceCurrency" : "CHF"
          },
          "referenceCurrency" : "CHF",
          "iban" : "CH123456789",
          "name" : "Household account",
          "id" : "8765432-19",
          "designation" : "Current Account CHF",
          "type" : "cashAccount"
        },
        "properties" : {
          "id" : {
            "description" : "Unique and unambiguous identification for the account. The IBAN should NOT be the account identifier.",
            "example" : "8765432-19",
            "maxLength" : 128,
            "type" : "string"
          },
          "type" : {
            "description" : "Indicates the type of the account. If the account type is cashAccount, no information on the financial instrument is provided in the respective position in the account.\n",
            "enum" : [ "cashAccount", "safekeepingAccount", "other" ],
            "example" : "cashAccount",
            "type" : "string"
          },
          "name" : {
            "description" : "Name of the account. It provides an additional means of identification, and is designated by the account servicer in agreement with the account owner.\n",
            "example" : "Household account",
            "maxLength" : 70,
            "type" : "string"
          },
          "referenceCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "iban" : {
            "description" : "Contains the accounts International Banking Account Number (IBAN) for a cashAccount if available.",
            "example" : "CH123456789",
            "maxLength" : 34,
            "type" : "string"
          },
          "designation" : {
            "description" : "Supplementary information on the account. Designated by the account servicer.",
            "example" : "Current Account CHF",
            "maxLength" : 70,
            "type" : "string"
          },
          "portfolioInformation" : {
            "$ref" : "#/components/schemas/PortfolioInformation"
          }
        },
        "required" : [ "id", "referenceCurrency", "type" ],
        "title" : "Account",
        "type" : "object"
      },
      "FinancialInstrumentType" : {
        "description" : "Type of the financial instrument.",
        "enum" : [ "cash", "bond", "equity", "fund", "index", "commodity", "option", "future", "fxForward", "fxSwap", "fxOption", "mortgage", "credit", "fixedLoan", "fixedDeposit", "callableLoan", "callableDeposit", "interestRateSwap", "totalReturnSwap", "creditDefaultSwap", "cryptoAsset", "other" ],
        "example" : "equity",
        "title" : "FinancialInstrumentType",
        "type" : "string"
      },
      "FinancialInstrumentIdentification" : {
        "description" : "Financial instrument identification in the form of a key value pair.",
        "example" : {
          "identifier" : "CH0012005267",
          "type" : "isin"
        },
        "properties" : {
          "identifier" : {
            "description" : "Instrument identification.",
            "example" : "CH0012005267",
            "maxLength" : 128,
            "type" : "string"
          },
          "type" : {
            "description" : "Type of the instrument ID. isin is preferred.",
            "enum" : [ "isin", "sedol", "cusip", "ric", "tickerSymbol", "bloomberg", "cta", "quick", "wertpapier", "dutch", "valoren", "sicovam", "belgian", "common", "iso3", "otherProprietaryIdentification" ],
            "example" : "isin",
            "type" : "string"
          }
        },
        "required" : [ "identifier", "type" ],
        "title" : "FinancialInstrumentIdentification",
        "type" : "object"
      },
      "CfiCode" : {
        "description" : "Indicates the type of the financial instrument. Must follow the ISO 10962, which is also known as CFI (classification of financial instruments). At least indicate the CFI Category (1st character) and the CFI Group (2nd character). The CFI attributes 1-4 (3rd to 6th character in the string) are optional.\n",
        "example" : "ESVUFR",
        "maxLength" : 6,
        "minLength" : 2,
        "pattern" : "^[A-Z]{2,6}$",
        "title" : "CFICode",
        "type" : "string"
      },
      "FinancialInstrumentBase" : {
        "description" : "Base schema for a financial instrument.",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/FinancialInstrumentType"
          },
          "name" : {
            "description" : "Name of the financial instrument in free format text.",
            "example" : "Novartis AG",
            "maxLength" : 170,
            "type" : "string"
          },
          "identificationList" : {
            "description" : "List of identification objects.",
            "items" : {
              "$ref" : "#/components/schemas/FinancialInstrumentIdentification"
            },
            "minItems" : 1,
            "type" : "array"
          },
          "cfiCode" : {
            "description" : "Indicates the type of the financial instrument. Must follow the ISO 10962, which is also known as CFI (classification of financial instruments). At least indicate the CFI Category (1st character) and the CFI Group (2nd character). The CFI attributes 1-4 (3rd to 6th character in the string) are optional.\n",
            "example" : "ESVUFR",
            "maxLength" : 6,
            "minLength" : 2,
            "pattern" : "^[A-Z]{2,6}$",
            "title" : "CFICode",
            "type" : "string"
          },
          "currencyOfDenomination" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "hasFactor" : {
            "description" : "Indicates if there is a factor present for this financial instrument. If this indicator is set to TRUE, but the factor attribute is not present, might indicate, that the factor cannot be delivered or is currently not available.\n",
            "example" : true,
            "type" : "boolean"
          },
          "factor" : {
            "description" : "Information regarding the factor.",
            "example" : 0.85,
            "type" : "number"
          },
          "additionalDetails" : {
            "description" : "Provides additional information about the financial instrument in narrative form.",
            "example" : "Group contract number 129959961",
            "maxLength" : 70,
            "type" : "string"
          }
        },
        "required" : [ "name", "type" ],
        "title" : "FinancialInstrumentBase",
        "type" : "object"
      },
      "Cash" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        } ],
        "description" : "Cash.",
        "example" : {
          "identificationList" : [ {
            "identifier" : "CH0012005267",
            "type" : "isin"
          }, {
            "identifier" : "CH0012005267",
            "type" : "isin"
          } ],
          "name" : "Novartis AG",
          "currencyOfDenomination" : "CHF",
          "type" : "equity",
          "factor" : 0.85,
          "additionalDetails" : "Group contract number 129959961",
          "cfiCode" : "ESVUFR",
          "hasFactor" : true
        },
        "title" : "Cash"
      },
      "DayCountBasis" : {
        "description" : "Interest method of the instrument.",
        "enum" : [ "act_360", "act_365", "act_actIcma", "act_actIsda", "act_actAfb", "act_365L", "bus_252", "u30_360", "u30E_360Icma", "u30E_360Isda", "u30E_360", "u30U_360" ],
        "example" : "u30_360",
        "title" : "DayCountBasis",
        "type" : "string"
      },
      "Date" : {
        "description" : "Date according to ISO 8601.",
        "example" : "2018-04-13",
        "format" : "date",
        "title" : "Date",
        "type" : "string"
      },
      "InterestRate" : {
        "description" : "Per annum ratio of interest received or paid to the principal amount of the contract for a specific period of time.",
        "properties" : {
          "type" : {
            "description" : "Indicates the type of interest, where\n- 'fixed' denotes a fixed interest rate for the agreed period.\n- 'variable' denotes a rate that fluctuates over time because it is based on an underlying benchmark ('basis') interest rate\nthat changes periodically with the market.\n- 'staggered' denotes a rate that is set at different levels for different periods of time or different underlying principal amount.\n",
            "enum" : [ "fixed", "variable", "staggered" ],
            "example" : "fixed",
            "type" : "string"
          },
          "value" : {
            "description" : "Current rate as decimal.",
            "example" : 0.00125,
            "type" : "number"
          },
          "dayCountBasis" : {
            "$ref" : "#/components/schemas/DayCountBasis"
          },
          "paymentDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "paymentFrequency" : {
            "description" : "Specifies the frequency of an interest payment.",
            "enum" : [ "annual", "monthly", "quarterly", "semiAnnual", "weekly", "atMaturity", "other" ],
            "example" : "quarterly",
            "type" : "string"
          },
          "basis" : {
            "description" : "Benchmark by which floating rate will adjust in accordance with market conditions, such as LIBOR, EURIBOR.",
            "example" : "LIBOR",
            "type" : "string"
          },
          "spread" : {
            "description" : "The floating rate will be equal to the base rate (basis) plus the spread.",
            "example" : 0.001,
            "type" : "number"
          }
        },
        "required" : [ "type", "value" ],
        "title" : "InterestRate",
        "type" : "object"
      },
      "Price" : {
        "description" : "Price entity.",
        "example" : {
          "currency" : "CHF",
          "type" : "percentage",
          "value" : 12000
        },
        "properties" : {
          "type" : {
            "description" : "Indicates whether the price amount is depicted as actual currency amount per unit or as percentage.",
            "enum" : [ "actual", "percentage" ],
            "example" : "percentage",
            "type" : "string"
          },
          "value" : {
            "description" : "Signed decimal number.",
            "example" : 12000,
            "type" : "number"
          },
          "currency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          }
        },
        "required" : [ "type", "value" ],
        "type" : "object"
      },
      "FinancialInstrument" : {
        "description" : "Financial instrument entity.",
        "discriminator" : {
          "mapping" : {
            "cash" : "#/components/schemas/Cash",
            "bond" : "#/components/schemas/Bond",
            "equity" : "#/components/schemas/Equity",
            "fund" : "#/components/schemas/Fund",
            "index" : "#/components/schemas/Index",
            "commodity" : "#/components/schemas/Commodity",
            "option" : "#/components/schemas/Option",
            "future" : "#/components/schemas/Future",
            "fxForward" : "#/components/schemas/FxForward",
            "fxSwap" : "#/components/schemas/FxSwap",
            "fxOption" : "#/components/schemas/FxOption",
            "mortgage" : "#/components/schemas/Mortgage",
            "credit" : "#/components/schemas/Credit",
            "fixedLoan" : "#/components/schemas/MoneyMarket",
            "fixedDeposit" : "#/components/schemas/MoneyMarket",
            "callableLoan" : "#/components/schemas/MoneyMarket",
            "callableDeposit" : "#/components/schemas/MoneyMarket",
            "interestRateSwap" : "#/components/schemas/InterestRateSwap",
            "totalReturnSwap" : "#/components/schemas/TotalReturnSwap",
            "creditDefaultSwap" : "#/components/schemas/CreditDefaultSwap",
            "cryptoAsset" : "#/components/schemas/CryptoAsset",
            "other" : "#/components/schemas/OtherFinancialInstrument"
          },
          "propertyName" : "type"
        },
        "oneOf" : [ {
          "$ref" : "#/components/schemas/Cash"
        }, {
          "$ref" : "#/components/schemas/Bond"
        }, {
          "$ref" : "#/components/schemas/Equity"
        }, {
          "$ref" : "#/components/schemas/Fund"
        }, {
          "$ref" : "#/components/schemas/Index"
        }, {
          "$ref" : "#/components/schemas/Commodity"
        }, {
          "$ref" : "#/components/schemas/Option"
        }, {
          "$ref" : "#/components/schemas/Future"
        }, {
          "$ref" : "#/components/schemas/FxForward"
        }, {
          "$ref" : "#/components/schemas/FxSwap"
        }, {
          "$ref" : "#/components/schemas/FxOption"
        }, {
          "$ref" : "#/components/schemas/Mortgage"
        }, {
          "$ref" : "#/components/schemas/Credit"
        }, {
          "$ref" : "#/components/schemas/MoneyMarket"
        }, {
          "$ref" : "#/components/schemas/InterestRateSwap"
        }, {
          "$ref" : "#/components/schemas/TotalReturnSwap"
        }, {
          "$ref" : "#/components/schemas/CreditDefaultSwap"
        }, {
          "$ref" : "#/components/schemas/CryptoAsset"
        }, {
          "$ref" : "#/components/schemas/OtherFinancialInstrument"
        } ],
        "title" : "FinancialInstrument",
        "type" : "object"
      },
      "Bond" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "interestRate" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "issueDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "conversionPrice" : {
              "$ref" : "#/components/schemas/Price"
            },
            "currencyOfDenomination" : {
              "$ref" : "#/components/schemas/Currency"
            },
            "minimumDenomination" : {
              "description" : "Indicates the minimum denomination of a security.",
              "example" : 10000,
              "type" : "number"
            },
            "minimumIncrement" : {
              "description" : "Indicates the minimum tradable increments of a security.",
              "example" : 1000,
              "type" : "number"
            },
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            }
          },
          "type" : "object"
        } ],
        "description" : "Bond.",
        "title" : "Bond"
      },
      "Equity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        } ],
        "description" : "Equity, typically referred to as shareholders' equity (or owners' equity for privately held companies), represents the amount of money that would be returned to a company's shareholders if all of the assets were liquidated and all of the company's debt was paid off in the case of liquidation.\n",
        "title" : "Equity"
      },
      "Fund" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        } ],
        "description" : "An investment fund is a supply of capital belonging to numerous investors used to collectively purchase securities while each investor retains ownership and control of his own shares.\n",
        "title" : "Fund"
      },
      "Index" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        } ],
        "description" : "A financial index produces a numeric score based on inputs such as a variety of asset prices.",
        "title" : "Index"
      },
      "Commodity" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        } ],
        "description" : "Commodity.",
        "title" : "Commodity"
      },
      "ContractSize" : {
        "default" : 1,
        "description" : "Contract size of the instrument.",
        "example" : 100,
        "title" : "ContractSize",
        "type" : "number"
      },
      "OptionType" : {
        "description" : "Specifies whether it is a Call option (right to purchase a specific underlying asset) or a Put option (right to sell a specific underlying asset).\n",
        "enum" : [ "call", "put" ],
        "example" : "call",
        "title" : "OptionType",
        "type" : "string"
      },
      "OptionStyle" : {
        "description" : "Specifies how an option can be exercised.",
        "enum" : [ "american", "european", "bermudan", "asian" ],
        "example" : "american",
        "title" : "OptionStyle",
        "type" : "string"
      },
      "Option" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "expiryDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "exercisePrice" : {
              "$ref" : "#/components/schemas/Price"
            },
            "contractSize" : {
              "$ref" : "#/components/schemas/ContractSize"
            },
            "optionType" : {
              "$ref" : "#/components/schemas/OptionType"
            },
            "optionStyle" : {
              "$ref" : "#/components/schemas/OptionStyle"
            },
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            }
          },
          "type" : "object"
        } ],
        "description" : "An option is a financial instrument that gives the holder the right, but not the obligation, to buy or sell an underlying asset at a predetermined price within a given time frame.\n",
        "required" : [ "underlyingFinancialInstrument" ],
        "title" : "Option"
      },
      "Future" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "expiryDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "contractSize" : {
              "$ref" : "#/components/schemas/ContractSize"
            },
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            },
            "exercisePrice" : {
              "$ref" : "#/components/schemas/Price"
            }
          },
          "type" : "object"
        } ],
        "description" : "Futures are derivative financial contracts that obligate parties to buy or sell an asset at a predetermined future date and price.",
        "required" : [ "underlyingFinancialInstrument" ],
        "title" : "Future"
      },
      "CurrencyAmount" : {
        "description" : "Amount denoted in a given currency.",
        "example" : {
          "amount" : 12000,
          "currency" : "CHF"
        },
        "properties" : {
          "amount" : {
            "description" : "Signed amount.",
            "example" : 12000,
            "type" : "number"
          },
          "currency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          }
        },
        "required" : [ "amount", "currency" ],
        "title" : "CurrencyAmount",
        "type" : "object"
      },
      "FxForward" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "amountPaid" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "amountReceived" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            }
          },
          "type" : "object"
        } ],
        "description" : "A forward contract is a customized contract between two parties to buy or sell currencies at a specified price on a future date.",
        "required" : [ "amountPaid", "amountReceived", "maturityDate" ],
        "title" : "FxForward"
      },
      "FxSwap" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "nearAmountPaid" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "nearAmountReceived" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "farAmountPaid" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "farAmountReceived" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "nearMaturityDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            }
          },
          "type" : "object"
        } ],
        "description" : "A foreign currency swap is an agreement between two foreign parties to swap interest payments on a loan made in one currency for interest payments on a loan made in another currency.\n",
        "required" : [ "farAmountPaid", "farAmountReceived", "maturityDate", "nearAmountPaid", "nearAmountReceived", "nearMaturityDate" ],
        "title" : "FxSwap"
      },
      "DateTime" : {
        "description" : "DateTime according to ISO 8601.",
        "example" : "2018-04-13T16:00:00+01:00",
        "format" : "date-time",
        "title" : "DateTime",
        "type" : "string"
      },
      "FxOption" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "expiryDateTime" : {
              "$ref" : "#/components/schemas/DateTime"
            },
            "underlyingAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "counterAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "premium" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "optionType" : {
              "$ref" : "#/components/schemas/OptionType"
            },
            "optionStyle" : {
              "$ref" : "#/components/schemas/OptionStyle"
            }
          },
          "type" : "object"
        } ],
        "description" : "An FX option is a contract that gives the buyer the right, but not the obligation, to buy or sell a certain currency at a specified exchange rate on or before a specified date. For this right, a premium is paid to the seller.\n",
        "required" : [ "counterAmount", "expiryDateTime", "underlyingAmount" ],
        "title" : "FxOption"
      },
      "Mortgage" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "principalAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "interestRate" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "limit" : {
              "description" : "Maximum principal amount allowed by the credit contract.",
              "example" : 100000,
              "type" : "number"
            }
          },
          "type" : "object"
        } ],
        "description" : "A mortgage is a type of loan used to purchase or maintain a home, plot of land, or other types of real estate.",
        "required" : [ "principalAmount" ],
        "title" : "Mortgage"
      },
      "Credit" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "principalAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "interestRate" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "limit" : {
              "description" : "Maximum principal amount allowed by the credit contract.",
              "example" : 100000,
              "type" : "number"
            },
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            }
          },
          "type" : "object"
        } ],
        "description" : "Credit.",
        "required" : [ "principalAmount" ],
        "title" : "Credit"
      },
      "MoneyMarket" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "principalAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "interestRate" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            }
          },
          "type" : "object"
        } ],
        "description" : "The money market schema covers both fixed and callable loans and deposits.",
        "required" : [ "principalAmount" ],
        "title" : "MoneyMarket"
      },
      "InterestRateSwap" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "notionalAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "interestRatePaid" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "interestRateReceived" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            }
          },
          "type" : "object"
        } ],
        "description" : "An interest rate swap is a forward contract in which one stream of future interest payments is exchanged for another based on a specified principal amount.\n",
        "required" : [ "interestRatePaid", "interestRateReceived", "notionalAmount" ],
        "title" : "InterestRateSwap"
      },
      "TotalReturnSwap" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "notionalAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "interestRatePaid" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "interestRateReceived" : {
              "$ref" : "#/components/schemas/InterestRate"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            }
          },
          "type" : "object"
        } ],
        "description" : "A swap agreement in which Party A pays fees to Party B in exchange for the income or return generated by an asset owned by Party B. If the private client is party A and the bank party B the property 'interestRatePaid' should be used to describe the interest, for opposite parties 'interestRateReceived'.\n",
        "required" : [ "notionalAmount", "underlyingFinancialInstrument" ],
        "title" : "TotalReturnSwap"
      },
      "CreditDefaultSwap" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "notionalAmount" : {
              "$ref" : "#/components/schemas/CurrencyAmount"
            },
            "maturityDate" : {
              "$ref" : "#/components/schemas/Date"
            },
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            }
          },
          "type" : "object"
        } ],
        "description" : "A derivative product which serves as a form of insurance against the default of an underlying borrower or debt instrument.",
        "required" : [ "notionalAmount" ],
        "title" : "CreditDefaultSwap"
      },
      "CryptoAsset" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        } ],
        "description" : "Crypto Asset.",
        "title" : "CryptoAsset"
      },
      "OtherFinancialInstrument" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/FinancialInstrumentBase"
        }, {
          "properties" : {
            "underlyingFinancialInstrument" : {
              "$ref" : "#/components/schemas/FinancialInstrument"
            }
          },
          "type" : "object"
        } ],
        "description" : "Other financial instrument.",
        "title" : "Other",
        "type" : "object"
      },
      "Position" : {
        "description" : "Position entity.",
        "properties" : {
          "id" : {
            "description" : "Identification for the position given by the bank.",
            "example" : "876-543219",
            "maxLength" : 128,
            "type" : "string"
          },
          "financialInstrument" : {
            "$ref" : "#/components/schemas/FinancialInstrument"
          },
          "account" : {
            "$ref" : "#/components/schemas/Account"
          },
          "name" : {
            "description" : "Name of the position.",
            "example" : "Stark Industries Inc.",
            "maxLength" : 80,
            "type" : "string"
          },
          "currency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "safekeepingPlace" : {
            "description" : "BIC of the place where the securities are safe-kept, physically or notionally.",
            "example" : "INSECHZZXXX",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
            "type" : "string"
          },
          "additionalCustodianInformation" : {
            "description" : "Used for special use cases where safekeepingPlace is not sufficient. BIC of the place where the securities are safe-kept, physically or notionally.\n",
            "example" : "INSECHZZXXX",
            "pattern" : "^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$",
            "type" : "string"
          },
          "additionalDetails" : {
            "description" : "Provides additional information on the position.",
            "example" : "Belongs to contract 129959959",
            "maxLength" : 70,
            "type" : "string"
          }
        },
        "required" : [ "account", "financialInstrument", "id" ],
        "title" : "Position",
        "type" : "object"
      },
      "Quantity" : {
        "description" : "Quantity entity.",
        "example" : {
          "type" : "unit",
          "value" : 12000
        },
        "properties" : {
          "type" : {
            "description" : "Specifies the type of the amount.",
            "enum" : [ "unit", "faceAmount", "amortisedValue", "digitalTokenUnit" ],
            "example" : "unit",
            "type" : "string"
          },
          "value" : {
            "description" : "Signed decimal number.",
            "example" : 12000,
            "type" : "number"
          }
        },
        "required" : [ "type", "value" ],
        "title" : "Quantity",
        "type" : "object"
      },
      "Valuation" : {
        "description" : "Detailed information about the valuation of a position.",
        "example" : {
          "valueInPositionCurrency" : {
            "amount" : 12000,
            "currency" : "CHF"
          },
          "valueInReferenceCurrency" : {
            "amount" : 12000,
            "currency" : "CHF"
          },
          "valuationDate" : "2018-04-13"
        },
        "properties" : {
          "valueInPositionCurrency" : {
            "$ref" : "#/components/schemas/CurrencyAmount"
          },
          "valueInReferenceCurrency" : {
            "$ref" : "#/components/schemas/CurrencyAmount"
          },
          "valuationDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          }
        },
        "required" : [ "valueInPositionCurrency" ],
        "title" : "Valuation",
        "type" : "object"
      },
      "ValuationPrice" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Price"
        }, {
          "properties" : {
            "priceDate" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Date"
              } ],
              "description" : "Date of the price."
            },
            "sourceOfPrice" : {
              "description" : "Indicates the source of the (market)price.",
              "example" : "SIX Swiss Exchange",
              "maxLength" : 70,
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Price used for valuation purpose.",
        "example" : {
          "priceDate" : "",
          "sourceOfPrice" : "SIX Swiss Exchange",
          "currency" : "CHF",
          "type" : "percentage",
          "value" : 12000
        },
        "title" : "ValuationPrice"
      },
      "ForeignExchangeRate" : {
        "description" : "An exchange rate is a rate at which one currency will be exchanged for another currency.",
        "example" : {
          "targetCurrency" : "CHF",
          "sourceCurrency" : "CHF",
          "value" : 0.98
        },
        "properties" : {
          "value" : {
            "description" : "Current rate as decimal.",
            "example" : 0.98,
            "type" : "number"
          },
          "sourceCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "targetCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          }
        },
        "required" : [ "sourceCurrency", "targetCurrency", "value" ],
        "title" : "ForeignExchangeRate",
        "type" : "object"
      },
      "ValuationForeignExchangeRate" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/ForeignExchangeRate"
        }, {
          "properties" : {
            "rateDate" : {
              "allOf" : [ {
                "$ref" : "#/components/schemas/Date"
              } ],
              "description" : "Date of rate."
            },
            "sourceOfRate" : {
              "description" : "Indicates the source of the (market) price.",
              "example" : "Reuters 4 o'clock",
              "maxLength" : 70,
              "type" : "string"
            }
          },
          "type" : "object"
        } ],
        "description" : "Foreign exchange rate of given by a defined source and used for valuation.",
        "example" : {
          "targetCurrency" : "CHF",
          "sourceCurrency" : "CHF",
          "rateDate" : "",
          "value" : 0.98,
          "sourceOfRate" : "Reuters 4 o'clock"
        },
        "title" : "ValuationForeignExchangeRate"
      },
      "ValuatedPosition" : {
        "allOf" : [ {
          "$ref" : "#/components/schemas/Position"
        } ],
        "description" : "Valuated position entity.",
        "example" : {
          "costForeignExchangeRate" : {
            "targetCurrency" : "CHF",
            "sourceCurrency" : "CHF",
            "value" : 0.98
          },
          "quantity" : {
            "type" : "unit",
            "value" : 12000
          },
          "valuation" : {
            "valueInPositionCurrency" : {
              "amount" : 12000,
              "currency" : "CHF"
            },
            "valueInReferenceCurrency" : {
              "amount" : 12000,
              "currency" : "CHF"
            },
            "valuationDate" : "2018-04-13"
          },
          "numberOfDaysAccrued" : 34,
          "price" : {
            "priceDate" : "",
            "sourceOfPrice" : "SIX Swiss Exchange",
            "currency" : "CHF",
            "type" : "percentage",
            "value" : 12000
          },
          "positionDate" : "2018-04-13",
          "blockedQuantity" : {
            "type" : "unit",
            "value" : 12000
          },
          "endOfDayIndicator" : true,
          "costPrice" : {
            "currency" : "CHF",
            "type" : "percentage",
            "value" : 12000
          },
          "foreignExchangeRate" : {
            "targetCurrency" : "CHF",
            "sourceCurrency" : "CHF",
            "rateDate" : "",
            "value" : 0.98,
            "sourceOfRate" : "Reuters 4 o'clock"
          },
          "accruedInterest" : {
            "amount" : 12000,
            "currency" : "CHF"
          }
        },
        "properties" : {
          "endOfDayIndicator" : {
            "description" : "Indicates if the position has been confirmed by the end-of-day (eod) processing.",
            "example" : true,
            "type" : "boolean"
          },
          "positionDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "quantity" : {
            "$ref" : "#/components/schemas/Quantity"
          },
          "valuation" : {
            "$ref" : "#/components/schemas/Valuation"
          },
          "price" : {
            "$ref" : "#/components/schemas/ValuationPrice"
          },
          "foreignExchangeRate" : {
            "$ref" : "#/components/schemas/ValuationForeignExchangeRate"
          },
          "costPrice" : {
            "$ref" : "#/components/schemas/Price"
          },
          "costForeignExchangeRate" : {
            "$ref" : "#/components/schemas/ForeignExchangeRate"
          },
          "accruedInterest" : {
            "$ref" : "#/components/schemas/CurrencyAmount"
          },
          "numberOfDaysAccrued" : {
            "description" : "Number of days used for calculating the accrued interest amount.",
            "example" : 34,
            "type" : "integer"
          },
          "blockedQuantity" : {
            "$ref" : "#/components/schemas/Quantity"
          }
        },
        "required" : [ "endOfDayIndicator", "positionDate", "quantity", "valuation" ],
        "title" : "ValuatedPosition",
        "type" : "object"
      },
      "TransactionType" : {
        "description" : "Type of the transaction.",
        "enum" : [ "accumulation", "additionalPayment", "adjustNotional", "amortizationAndInterestPayment", "assignment", "assimilation", "bonus", "buy", "buyToClose", "capitalIncrease", "closeContract", "conversionBondShare", "coupon", "creditEvent", "decreasePrincipal", "deliveryFreeOfPayment", "deliveryVsPayment", "dividendCash", "dividendChoice", "dividendReinvestment", "dividendStock", "exercise", "expiration", "fees", "finalLiquidationPayment", "fxSpot", "increasePrincipal", "inflowCash", "instrumentExchange", "interestPayment", "internalTransfer", "liquidationPayment", "merger", "openContract", "other", "outflowCash", "premium", "prepaymentSubstitution", "receiveFreeOfPayment", "receiveVsPayment", "redemption", "redemptionPartial", "redemptionPrior", "reductionOfNominal", "resetPayment", "rightDistribution", "sell", "sellToOpen", "spinOff", "stockSplit", "subscription", "taxCorrections", "taxes", "transferMetalPhysical", "unwind", "variationMargin" ],
        "example" : "buy",
        "title" : "TransactionType",
        "type" : "string"
      },
      "PlaceOfTrade" : {
        "description" : "Market in which a trade transaction is to be or has been executed.",
        "example" : {
          "marketDescription" : "OTC",
          "marketIdentificationCode" : "XSWX"
        },
        "properties" : {
          "marketIdentificationCode" : {
            "description" : "Market Identifier Code. Identification of a financial market, as stipulated in the norm ISOMarket Identifier Code. Identification of a financial market, as stipulated in the norm ISO 10383 \"Codes for exchanges and market identifications\".\n",
            "example" : "XSWX",
            "maxLength" : 4,
            "type" : "string"
          },
          "marketDescription" : {
            "description" : "Description of the market when no Market Identification Code is available.",
            "example" : "OTC",
            "maxLength" : 70,
            "type" : "string"
          }
        },
        "title" : "PlaceOfTrade",
        "type" : "object"
      },
      "MovementType" : {
        "description" : "Describes which kind of movement is reported from a banks perspective.",
        "enum" : [ "accruedInterest", "additionalWithholdingTax", "asset", "brokerageFee", "capitalGainTax", "cash", "commission", "custodyFee", "exchangeFee", "financialTransactionTax", "interest", "managementFee", "otherFee", "other", "otherTax", "premium", "reclaimableTax", "reinvestmentAmount", "stampDuty", "thirdPartyFee", "transactionFee", "valueAddedTax", "withholdingTax" ],
        "example" : "cash",
        "title" : "MovementType",
        "type" : "string"
      },
      "Movement" : {
        "description" : "Describes a single movement/booking/flow within a transaction. Every transaction contains in the minimum one movement.",
        "example" : {
          "movementTypeAdditionalInformation" : "Fees for Reporting Service",
          "quantity" : {
            "type" : "unit",
            "value" : 12000
          },
          "positionId" : "1234566-12-1",
          "price" : {
            "currency" : "CHF",
            "type" : "percentage",
            "value" : 12000
          },
          "movementDate" : "2018-04-13",
          "foreignExchangeRate" : {
            "targetCurrency" : "CHF",
            "sourceCurrency" : "CHF",
            "value" : 0.98
          },
          "valueDate" : "2018-04-13",
          "type" : "cash",
          "account" : {
            "portfolioInformation" : {
              "identification" : "87654-3219",
              "referenceCurrency" : "CHF"
            },
            "referenceCurrency" : "CHF",
            "iban" : "CH123456789",
            "name" : "Household account",
            "id" : "8765432-19",
            "designation" : "Current Account CHF",
            "type" : "cashAccount"
          },
          "financialInstrument" : null,
          "positionCurrency" : "CHF"
        },
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/MovementType"
          },
          "movementDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "financialInstrument" : {
            "$ref" : "#/components/schemas/FinancialInstrument"
          },
          "account" : {
            "$ref" : "#/components/schemas/Account"
          },
          "quantity" : {
            "$ref" : "#/components/schemas/Quantity"
          },
          "positionId" : {
            "description" : "Identification for the position given by the bank.",
            "example" : "1234566-12-1",
            "maxLength" : 128,
            "type" : "string"
          },
          "positionCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "valueDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "price" : {
            "$ref" : "#/components/schemas/Price"
          },
          "foreignExchangeRate" : {
            "$ref" : "#/components/schemas/ForeignExchangeRate"
          },
          "movementTypeAdditionalInformation" : {
            "description" : "Provides further details on an informative level, which goes beyond the granularity of the movementType.",
            "example" : "Fees for Reporting Service",
            "maxLength" : 35,
            "type" : "string"
          }
        },
        "required" : [ "account", "financialInstrument", "movementDate", "positionId", "quantity", "type" ],
        "title" : "Movement",
        "type" : "object"
      },
      "PostingAmount" : {
        "description" : "Total amount of money that is to be/was posted to the account in the account currency.",
        "example" : {
          "amount" : 13023,
          "currency" : "CHF",
          "account" : {
            "portfolioInformation" : {
              "identification" : "87654-3219",
              "referenceCurrency" : "CHF"
            },
            "referenceCurrency" : "CHF",
            "iban" : "CH123456789",
            "name" : "Household account",
            "id" : "8765432-19",
            "designation" : "Current Account CHF",
            "type" : "cashAccount"
          }
        },
        "properties" : {
          "amount" : {
            "description" : "Signed amount of the cash transaction.",
            "example" : 13023,
            "type" : "number"
          },
          "currency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "account" : {
            "$ref" : "#/components/schemas/Account"
          }
        },
        "required" : [ "account", "amount", "currency" ],
        "title" : "PostingAmount",
        "type" : "object"
      },
      "Transaction" : {
        "description" : "Transaction entity.",
        "example" : {
          "reversalIndicator" : false,
          "placeOfTrade" : {
            "marketDescription" : "OTC",
            "marketIdentificationCode" : "XSWX"
          },
          "description" : "Buy 500 Apple Inc at 176 USD",
          "triggeringFinancialInstrument" : {
            "identificationList" : [ {
              "identifier" : "CH0012005267",
              "type" : "isin"
            }, {
              "identifier" : "CH0012005267",
              "type" : "isin"
            } ],
            "name" : "Novartis AG",
            "currencyOfDenomination" : "CHF",
            "type" : "equity",
            "factor" : 0.85,
            "additionalDetails" : "Group contract number 129959961",
            "cfiCode" : "ESVUFR",
            "hasFactor" : true
          },
          "tradeDate" : "2018-04-13",
          "settlementDate" : "2018-04-13",
          "type" : "buy",
          "transactionDate" : "2018-04-13",
          "additionalDetails" : "Replaces transaction nr. 12234567489",
          "postingAmountList" : [ {
            "amount" : 13023,
            "currency" : "CHF",
            "account" : {
              "portfolioInformation" : {
                "identification" : "87654-3219",
                "referenceCurrency" : "CHF"
              },
              "referenceCurrency" : "CHF",
              "iban" : "CH123456789",
              "name" : "Household account",
              "id" : "8765432-19",
              "designation" : "Current Account CHF",
              "type" : "cashAccount"
            }
          }, {
            "amount" : 13023,
            "currency" : "CHF",
            "account" : {
              "portfolioInformation" : {
                "identification" : "87654-3219",
                "referenceCurrency" : "CHF"
              },
              "referenceCurrency" : "CHF",
              "iban" : "CH123456789",
              "name" : "Household account",
              "id" : "8765432-19",
              "designation" : "Current Account CHF",
              "type" : "cashAccount"
            }
          } ],
          "reference" : "XS12345678",
          "reversedTransactionId" : "2134123-415",
          "settlementCurrency" : "CHF",
          "movementList" : [ {
            "movementTypeAdditionalInformation" : "Fees for Reporting Service",
            "quantity" : {
              "type" : "unit",
              "value" : 12000
            },
            "positionId" : "1234566-12-1",
            "price" : {
              "currency" : "CHF",
              "type" : "percentage",
              "value" : 12000
            },
            "movementDate" : "2018-04-13",
            "foreignExchangeRate" : {
              "targetCurrency" : "CHF",
              "sourceCurrency" : "CHF",
              "value" : 0.98
            },
            "valueDate" : "2018-04-13",
            "type" : "cash",
            "account" : {
              "portfolioInformation" : {
                "identification" : "87654-3219",
                "referenceCurrency" : "CHF"
              },
              "referenceCurrency" : "CHF",
              "iban" : "CH123456789",
              "name" : "Household account",
              "id" : "8765432-19",
              "designation" : "Current Account CHF",
              "type" : "cashAccount"
            },
            "financialInstrument" : null,
            "positionCurrency" : "CHF"
          }, {
            "movementTypeAdditionalInformation" : "Fees for Reporting Service",
            "quantity" : {
              "type" : "unit",
              "value" : 12000
            },
            "positionId" : "1234566-12-1",
            "price" : {
              "currency" : "CHF",
              "type" : "percentage",
              "value" : 12000
            },
            "movementDate" : "2018-04-13",
            "foreignExchangeRate" : {
              "targetCurrency" : "CHF",
              "sourceCurrency" : "CHF",
              "value" : 0.98
            },
            "valueDate" : "2018-04-13",
            "type" : "cash",
            "account" : {
              "portfolioInformation" : {
                "identification" : "87654-3219",
                "referenceCurrency" : "CHF"
              },
              "referenceCurrency" : "CHF",
              "iban" : "CH123456789",
              "name" : "Household account",
              "id" : "8765432-19",
              "designation" : "Current Account CHF",
              "type" : "cashAccount"
            },
            "financialInstrument" : null,
            "positionCurrency" : "CHF"
          } ],
          "customerId" : "12345-6",
          "endOfDayIndicator" : true,
          "id" : "9876-54321",
          "triggeringQuantity" : {
            "type" : "unit",
            "value" : 12000
          }
        },
        "properties" : {
          "id" : {
            "description" : "Transaction ID given by the bank.",
            "example" : "9876-54321",
            "maxLength" : 128,
            "readOnly" : true,
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/TransactionType"
          },
          "transactionDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "customerId" : {
            "description" : "Unique and unambiguous identification used by the bank for the customer.",
            "example" : "12345-6",
            "type" : "string"
          },
          "reversalIndicator" : {
            "default" : false,
            "description" : "Indicates whether it is the reversal of a previously reported movement.",
            "example" : false,
            "type" : "boolean"
          },
          "endOfDayIndicator" : {
            "description" : "Indicates if the transaction has been confirmed by the end-of-day (eod) processing.",
            "example" : true,
            "type" : "boolean"
          },
          "reference" : {
            "description" : "Transaction reference as used in the transaction statement. This could be equal to the id of the transaction but may not if GUID are used to identify the transaction.\n",
            "example" : "XS12345678",
            "type" : "string"
          },
          "description" : {
            "description" : "Human readable description of the transaction. Often referred to as 'Buchungs-Text' in german transaction statements.",
            "example" : "Buy 500 Apple Inc at 176 USD",
            "type" : "string"
          },
          "placeOfTrade" : {
            "$ref" : "#/components/schemas/PlaceOfTrade"
          },
          "reversedTransactionId" : {
            "description" : "States the identification of the transaction that was reversed.",
            "example" : "2134123-415",
            "maxLength" : 128,
            "type" : "string"
          },
          "tradeDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "settlementDate" : {
            "description" : "Date according to ISO 8601.",
            "example" : "2018-04-13",
            "format" : "date",
            "title" : "Date",
            "type" : "string"
          },
          "triggeringFinancialInstrument" : {
            "$ref" : "#/components/schemas/FinancialInstrument"
          },
          "triggeringQuantity" : {
            "$ref" : "#/components/schemas/Quantity"
          },
          "movementList" : {
            "description" : "List of movements belonging to a transaction from a banks perspective.",
            "items" : {
              "$ref" : "#/components/schemas/Movement"
            },
            "type" : "array"
          },
          "postingAmountList" : {
            "description" : "List of total amounts of money that is to be/was posted to respective accounts in the account currency.",
            "items" : {
              "$ref" : "#/components/schemas/PostingAmount"
            },
            "type" : "array"
          },
          "settlementCurrency" : {
            "description" : "ISO 4217 code.",
            "example" : "CHF",
            "pattern" : "^[A-Z]{3}$",
            "title" : "Currency",
            "type" : "string"
          },
          "additionalDetails" : {
            "description" : "Provides additional details on the transaction which can not be included within the structured fields of the message.",
            "example" : "Replaces transaction nr. 12234567489",
            "maxLength" : 70,
            "type" : "string"
          }
        },
        "required" : [ "customerId", "endOfDayIndicator", "id", "reversalIndicator", "transactionDate", "type" ],
        "title" : "Transaction",
        "type" : "object"
      }
    },
    "securitySchemes" : { }
  }
}
